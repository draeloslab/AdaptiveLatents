[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "adaptive_latents"
version = "0.0.1"
description = "Methods for real-time prediction of latent neural dynamics"
authors = [{name = "Jonathan Gould", email = "jngould@umich.edu"},
           {name = "Anne Draelos", email = "adraelos@umich.edu"}]
            #TODO: Pato?
readme = "README.md"
requires-python = ">=3.7"
keywords = ["neuroscience", "prediction", "dynamics"]
dependencies = [] # todo: might be able to migrate pyproject.toml to requirements.txt and then use dynamic metadata?

[tool.pytest.ini_options]
pythonpath = [
  "." # so we can import from the scripts in the tests; you should still install adaptive_latents as a package
]
norecursedirs = ['datasets']

[tool.setuptools]
packages = ["adaptive_latents"]

[tool.setuptools.package-data]
adaptive_latents = ["adaptive_latents_config.yaml"]

[tool.yapf]
based_on_style='facebook'
ARITHMETIC_PRECEDENCE_INDICATION=true
SPLIT_BEFORE_NAMED_ASSIGNS=true
SPACE_BETWEEN_ENDING_COMMA_AND_CLOSING_BRACKET=false
COALESCE_BRACKETS=true
COLUMN_LIMIT=300

[tool.yapfignore]
ignore_patterns=[
    "workspace/datasets/*"
]

[tool.coverage.report]
exclude_also = [
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if .TYPE_CHECKING.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

[tool.coverage.run]
source = [
    "adaptive_latents",
    "tests",
    "workspace",
    ]
omit = [
    "workspace/datasets/*"
]

[tool.coverage.html]
directory = "./tests/reports/coverage-html"

[tool.coverage.xml]
output = "./tests/reports/coverage.xml"
